/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.gbif.pipelines.io.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

import org.apache.beam.sdk.coders.AvroCoder;
import org.apache.beam.sdk.coders.DefaultCoder;
@DefaultCoder(AvroCoder.class)
@SuppressWarnings("all")
/** An ALA Name Match */
@org.apache.avro.specific.AvroGenerated
public class ALATaxonRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, org.gbif.pipelines.io.avro.Issues, org.gbif.pipelines.io.avro.Record {
  private static final long serialVersionUID = 4046271322807338643L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ALATaxonRecord\",\"namespace\":\"org.gbif.pipelines.io.avro\",\"doc\":\"An ALA Name Match\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"scientificName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"scientificNameAuthorship\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"taxonConceptID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rank\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"rankID\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"lft\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"rgt\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"matchType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"kingdom\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"kingdomID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phylum\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phylumID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"classs\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"classID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"order\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"family\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"familyID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"genus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"genusID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"species\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"speciesID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"vernacularName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"speciesGroup\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":null},{\"name\":\"speciesSubgroup\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":null},{\"name\":\"diagnostics\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Diagnostic\",\"fields\":[{\"name\":\"matchType\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"MatchType\",\"symbols\":[\"EXACT\",\"FUZZY\",\"HIGHERRANK\",\"NONE\"]}],\"default\":null},{\"name\":\"confidence\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"Status\",\"symbols\":[\"ACCEPTED\",\"DOUBTFUL\",\"SYNONYM\",\"HETEROTYPIC_SYNONYM\",\"HOMOTYPIC_SYNONYM\",\"PROPARTE_SYNONYM\",\"MISAPPLIED\",\"INTERMEDIATE_RANK_SYNONYM\",\"DETERMINATION_SYNONYM\"]}],\"default\":null},{\"name\":\"lineage\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"note\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"issues\",\"type\":{\"type\":\"record\",\"name\":\"IssueRecord\",\"doc\":\"Issue information\",\"fields\":[{\"name\":\"issueList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]}]},\"default\":{}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ALATaxonRecord> ENCODER =
      new BinaryMessageEncoder<ALATaxonRecord>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ALATaxonRecord> DECODER =
      new BinaryMessageDecoder<ALATaxonRecord>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ALATaxonRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ALATaxonRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ALATaxonRecord>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ALATaxonRecord to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ALATaxonRecord from a ByteBuffer. */
  public static ALATaxonRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String id;
  @Deprecated public java.lang.String scientificName;
  @Deprecated public java.lang.String scientificNameAuthorship;
  @Deprecated public java.lang.String taxonConceptID;
  @Deprecated public java.lang.String rank;
  @Deprecated public java.lang.Integer rankID;
  @Deprecated public java.lang.Integer lft;
  @Deprecated public java.lang.Integer rgt;
  @Deprecated public java.lang.String matchType;
  @Deprecated public java.lang.String kingdom;
  @Deprecated public java.lang.String kingdomID;
  @Deprecated public java.lang.String phylum;
  @Deprecated public java.lang.String phylumID;
  @Deprecated public java.lang.String classs;
  @Deprecated public java.lang.String classID;
  @Deprecated public java.lang.String order;
  @Deprecated public java.lang.String orderID;
  @Deprecated public java.lang.String family;
  @Deprecated public java.lang.String familyID;
  @Deprecated public java.lang.String genus;
  @Deprecated public java.lang.String genusID;
  @Deprecated public java.lang.String species;
  @Deprecated public java.lang.String speciesID;
  @Deprecated public java.lang.String vernacularName;
  @Deprecated public java.util.List<java.lang.String> speciesGroup;
  @Deprecated public java.util.List<java.lang.String> speciesSubgroup;
  @Deprecated public org.gbif.pipelines.io.avro.Diagnostic diagnostics;
  @Deprecated public org.gbif.pipelines.io.avro.IssueRecord issues;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ALATaxonRecord() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param scientificName The new value for scientificName
   * @param scientificNameAuthorship The new value for scientificNameAuthorship
   * @param taxonConceptID The new value for taxonConceptID
   * @param rank The new value for rank
   * @param rankID The new value for rankID
   * @param lft The new value for lft
   * @param rgt The new value for rgt
   * @param matchType The new value for matchType
   * @param kingdom The new value for kingdom
   * @param kingdomID The new value for kingdomID
   * @param phylum The new value for phylum
   * @param phylumID The new value for phylumID
   * @param classs The new value for classs
   * @param classID The new value for classID
   * @param order The new value for order
   * @param orderID The new value for orderID
   * @param family The new value for family
   * @param familyID The new value for familyID
   * @param genus The new value for genus
   * @param genusID The new value for genusID
   * @param species The new value for species
   * @param speciesID The new value for speciesID
   * @param vernacularName The new value for vernacularName
   * @param speciesGroup The new value for speciesGroup
   * @param speciesSubgroup The new value for speciesSubgroup
   * @param diagnostics The new value for diagnostics
   * @param issues The new value for issues
   */
  public ALATaxonRecord(java.lang.String id, java.lang.String scientificName, java.lang.String scientificNameAuthorship, java.lang.String taxonConceptID, java.lang.String rank, java.lang.Integer rankID, java.lang.Integer lft, java.lang.Integer rgt, java.lang.String matchType, java.lang.String kingdom, java.lang.String kingdomID, java.lang.String phylum, java.lang.String phylumID, java.lang.String classs, java.lang.String classID, java.lang.String order, java.lang.String orderID, java.lang.String family, java.lang.String familyID, java.lang.String genus, java.lang.String genusID, java.lang.String species, java.lang.String speciesID, java.lang.String vernacularName, java.util.List<java.lang.String> speciesGroup, java.util.List<java.lang.String> speciesSubgroup, org.gbif.pipelines.io.avro.Diagnostic diagnostics, org.gbif.pipelines.io.avro.IssueRecord issues) {
    this.id = id;
    this.scientificName = scientificName;
    this.scientificNameAuthorship = scientificNameAuthorship;
    this.taxonConceptID = taxonConceptID;
    this.rank = rank;
    this.rankID = rankID;
    this.lft = lft;
    this.rgt = rgt;
    this.matchType = matchType;
    this.kingdom = kingdom;
    this.kingdomID = kingdomID;
    this.phylum = phylum;
    this.phylumID = phylumID;
    this.classs = classs;
    this.classID = classID;
    this.order = order;
    this.orderID = orderID;
    this.family = family;
    this.familyID = familyID;
    this.genus = genus;
    this.genusID = genusID;
    this.species = species;
    this.speciesID = speciesID;
    this.vernacularName = vernacularName;
    this.speciesGroup = speciesGroup;
    this.speciesSubgroup = speciesSubgroup;
    this.diagnostics = diagnostics;
    this.issues = issues;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return scientificName;
    case 2: return scientificNameAuthorship;
    case 3: return taxonConceptID;
    case 4: return rank;
    case 5: return rankID;
    case 6: return lft;
    case 7: return rgt;
    case 8: return matchType;
    case 9: return kingdom;
    case 10: return kingdomID;
    case 11: return phylum;
    case 12: return phylumID;
    case 13: return classs;
    case 14: return classID;
    case 15: return order;
    case 16: return orderID;
    case 17: return family;
    case 18: return familyID;
    case 19: return genus;
    case 20: return genusID;
    case 21: return species;
    case 22: return speciesID;
    case 23: return vernacularName;
    case 24: return speciesGroup;
    case 25: return speciesSubgroup;
    case 26: return diagnostics;
    case 27: return issues;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: scientificName = (java.lang.String)value$; break;
    case 2: scientificNameAuthorship = (java.lang.String)value$; break;
    case 3: taxonConceptID = (java.lang.String)value$; break;
    case 4: rank = (java.lang.String)value$; break;
    case 5: rankID = (java.lang.Integer)value$; break;
    case 6: lft = (java.lang.Integer)value$; break;
    case 7: rgt = (java.lang.Integer)value$; break;
    case 8: matchType = (java.lang.String)value$; break;
    case 9: kingdom = (java.lang.String)value$; break;
    case 10: kingdomID = (java.lang.String)value$; break;
    case 11: phylum = (java.lang.String)value$; break;
    case 12: phylumID = (java.lang.String)value$; break;
    case 13: classs = (java.lang.String)value$; break;
    case 14: classID = (java.lang.String)value$; break;
    case 15: order = (java.lang.String)value$; break;
    case 16: orderID = (java.lang.String)value$; break;
    case 17: family = (java.lang.String)value$; break;
    case 18: familyID = (java.lang.String)value$; break;
    case 19: genus = (java.lang.String)value$; break;
    case 20: genusID = (java.lang.String)value$; break;
    case 21: species = (java.lang.String)value$; break;
    case 22: speciesID = (java.lang.String)value$; break;
    case 23: vernacularName = (java.lang.String)value$; break;
    case 24: speciesGroup = (java.util.List<java.lang.String>)value$; break;
    case 25: speciesSubgroup = (java.util.List<java.lang.String>)value$; break;
    case 26: diagnostics = (org.gbif.pipelines.io.avro.Diagnostic)value$; break;
    case 27: issues = (org.gbif.pipelines.io.avro.IssueRecord)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'scientificName' field.
   * @return The value of the 'scientificName' field.
   */
  public java.lang.String getScientificName() {
    return scientificName;
  }

  /**
   * Sets the value of the 'scientificName' field.
   * @param value the value to set.
   */
  public void setScientificName(java.lang.String value) {
    this.scientificName = value;
  }

  /**
   * Gets the value of the 'scientificNameAuthorship' field.
   * @return The value of the 'scientificNameAuthorship' field.
   */
  public java.lang.String getScientificNameAuthorship() {
    return scientificNameAuthorship;
  }

  /**
   * Sets the value of the 'scientificNameAuthorship' field.
   * @param value the value to set.
   */
  public void setScientificNameAuthorship(java.lang.String value) {
    this.scientificNameAuthorship = value;
  }

  /**
   * Gets the value of the 'taxonConceptID' field.
   * @return The value of the 'taxonConceptID' field.
   */
  public java.lang.String getTaxonConceptID() {
    return taxonConceptID;
  }

  /**
   * Sets the value of the 'taxonConceptID' field.
   * @param value the value to set.
   */
  public void setTaxonConceptID(java.lang.String value) {
    this.taxonConceptID = value;
  }

  /**
   * Gets the value of the 'rank' field.
   * @return The value of the 'rank' field.
   */
  public java.lang.String getRank() {
    return rank;
  }

  /**
   * Sets the value of the 'rank' field.
   * @param value the value to set.
   */
  public void setRank(java.lang.String value) {
    this.rank = value;
  }

  /**
   * Gets the value of the 'rankID' field.
   * @return The value of the 'rankID' field.
   */
  public java.lang.Integer getRankID() {
    return rankID;
  }

  /**
   * Sets the value of the 'rankID' field.
   * @param value the value to set.
   */
  public void setRankID(java.lang.Integer value) {
    this.rankID = value;
  }

  /**
   * Gets the value of the 'lft' field.
   * @return The value of the 'lft' field.
   */
  public java.lang.Integer getLft() {
    return lft;
  }

  /**
   * Sets the value of the 'lft' field.
   * @param value the value to set.
   */
  public void setLft(java.lang.Integer value) {
    this.lft = value;
  }

  /**
   * Gets the value of the 'rgt' field.
   * @return The value of the 'rgt' field.
   */
  public java.lang.Integer getRgt() {
    return rgt;
  }

  /**
   * Sets the value of the 'rgt' field.
   * @param value the value to set.
   */
  public void setRgt(java.lang.Integer value) {
    this.rgt = value;
  }

  /**
   * Gets the value of the 'matchType' field.
   * @return The value of the 'matchType' field.
   */
  public java.lang.String getMatchType() {
    return matchType;
  }

  /**
   * Sets the value of the 'matchType' field.
   * @param value the value to set.
   */
  public void setMatchType(java.lang.String value) {
    this.matchType = value;
  }

  /**
   * Gets the value of the 'kingdom' field.
   * @return The value of the 'kingdom' field.
   */
  public java.lang.String getKingdom() {
    return kingdom;
  }

  /**
   * Sets the value of the 'kingdom' field.
   * @param value the value to set.
   */
  public void setKingdom(java.lang.String value) {
    this.kingdom = value;
  }

  /**
   * Gets the value of the 'kingdomID' field.
   * @return The value of the 'kingdomID' field.
   */
  public java.lang.String getKingdomID() {
    return kingdomID;
  }

  /**
   * Sets the value of the 'kingdomID' field.
   * @param value the value to set.
   */
  public void setKingdomID(java.lang.String value) {
    this.kingdomID = value;
  }

  /**
   * Gets the value of the 'phylum' field.
   * @return The value of the 'phylum' field.
   */
  public java.lang.String getPhylum() {
    return phylum;
  }

  /**
   * Sets the value of the 'phylum' field.
   * @param value the value to set.
   */
  public void setPhylum(java.lang.String value) {
    this.phylum = value;
  }

  /**
   * Gets the value of the 'phylumID' field.
   * @return The value of the 'phylumID' field.
   */
  public java.lang.String getPhylumID() {
    return phylumID;
  }

  /**
   * Sets the value of the 'phylumID' field.
   * @param value the value to set.
   */
  public void setPhylumID(java.lang.String value) {
    this.phylumID = value;
  }

  /**
   * Gets the value of the 'classs' field.
   * @return The value of the 'classs' field.
   */
  public java.lang.String getClasss() {
    return classs;
  }

  /**
   * Sets the value of the 'classs' field.
   * @param value the value to set.
   */
  public void setClasss(java.lang.String value) {
    this.classs = value;
  }

  /**
   * Gets the value of the 'classID' field.
   * @return The value of the 'classID' field.
   */
  public java.lang.String getClassID() {
    return classID;
  }

  /**
   * Sets the value of the 'classID' field.
   * @param value the value to set.
   */
  public void setClassID(java.lang.String value) {
    this.classID = value;
  }

  /**
   * Gets the value of the 'order' field.
   * @return The value of the 'order' field.
   */
  public java.lang.String getOrder() {
    return order;
  }

  /**
   * Sets the value of the 'order' field.
   * @param value the value to set.
   */
  public void setOrder(java.lang.String value) {
    this.order = value;
  }

  /**
   * Gets the value of the 'orderID' field.
   * @return The value of the 'orderID' field.
   */
  public java.lang.String getOrderID() {
    return orderID;
  }

  /**
   * Sets the value of the 'orderID' field.
   * @param value the value to set.
   */
  public void setOrderID(java.lang.String value) {
    this.orderID = value;
  }

  /**
   * Gets the value of the 'family' field.
   * @return The value of the 'family' field.
   */
  public java.lang.String getFamily() {
    return family;
  }

  /**
   * Sets the value of the 'family' field.
   * @param value the value to set.
   */
  public void setFamily(java.lang.String value) {
    this.family = value;
  }

  /**
   * Gets the value of the 'familyID' field.
   * @return The value of the 'familyID' field.
   */
  public java.lang.String getFamilyID() {
    return familyID;
  }

  /**
   * Sets the value of the 'familyID' field.
   * @param value the value to set.
   */
  public void setFamilyID(java.lang.String value) {
    this.familyID = value;
  }

  /**
   * Gets the value of the 'genus' field.
   * @return The value of the 'genus' field.
   */
  public java.lang.String getGenus() {
    return genus;
  }

  /**
   * Sets the value of the 'genus' field.
   * @param value the value to set.
   */
  public void setGenus(java.lang.String value) {
    this.genus = value;
  }

  /**
   * Gets the value of the 'genusID' field.
   * @return The value of the 'genusID' field.
   */
  public java.lang.String getGenusID() {
    return genusID;
  }

  /**
   * Sets the value of the 'genusID' field.
   * @param value the value to set.
   */
  public void setGenusID(java.lang.String value) {
    this.genusID = value;
  }

  /**
   * Gets the value of the 'species' field.
   * @return The value of the 'species' field.
   */
  public java.lang.String getSpecies() {
    return species;
  }

  /**
   * Sets the value of the 'species' field.
   * @param value the value to set.
   */
  public void setSpecies(java.lang.String value) {
    this.species = value;
  }

  /**
   * Gets the value of the 'speciesID' field.
   * @return The value of the 'speciesID' field.
   */
  public java.lang.String getSpeciesID() {
    return speciesID;
  }

  /**
   * Sets the value of the 'speciesID' field.
   * @param value the value to set.
   */
  public void setSpeciesID(java.lang.String value) {
    this.speciesID = value;
  }

  /**
   * Gets the value of the 'vernacularName' field.
   * @return The value of the 'vernacularName' field.
   */
  public java.lang.String getVernacularName() {
    return vernacularName;
  }

  /**
   * Sets the value of the 'vernacularName' field.
   * @param value the value to set.
   */
  public void setVernacularName(java.lang.String value) {
    this.vernacularName = value;
  }

  /**
   * Gets the value of the 'speciesGroup' field.
   * @return The value of the 'speciesGroup' field.
   */
  public java.util.List<java.lang.String> getSpeciesGroup() {
    return speciesGroup;
  }

  /**
   * Sets the value of the 'speciesGroup' field.
   * @param value the value to set.
   */
  public void setSpeciesGroup(java.util.List<java.lang.String> value) {
    this.speciesGroup = value;
  }

  /**
   * Gets the value of the 'speciesSubgroup' field.
   * @return The value of the 'speciesSubgroup' field.
   */
  public java.util.List<java.lang.String> getSpeciesSubgroup() {
    return speciesSubgroup;
  }

  /**
   * Sets the value of the 'speciesSubgroup' field.
   * @param value the value to set.
   */
  public void setSpeciesSubgroup(java.util.List<java.lang.String> value) {
    this.speciesSubgroup = value;
  }

  /**
   * Gets the value of the 'diagnostics' field.
   * @return The value of the 'diagnostics' field.
   */
  public org.gbif.pipelines.io.avro.Diagnostic getDiagnostics() {
    return diagnostics;
  }

  /**
   * Sets the value of the 'diagnostics' field.
   * @param value the value to set.
   */
  public void setDiagnostics(org.gbif.pipelines.io.avro.Diagnostic value) {
    this.diagnostics = value;
  }

  /**
   * Gets the value of the 'issues' field.
   * @return The value of the 'issues' field.
   */
  @Override
  public org.gbif.pipelines.io.avro.IssueRecord getIssues() {
    return issues;
  }

  /**
   * Sets the value of the 'issues' field.
   * @param value the value to set.
   */
  public void setIssues(org.gbif.pipelines.io.avro.IssueRecord value) {
    this.issues = value;
  }

  /**
   * Creates a new ALATaxonRecord RecordBuilder.
   * @return A new ALATaxonRecord RecordBuilder
   */
  public static org.gbif.pipelines.io.avro.ALATaxonRecord.Builder newBuilder() {
    return new org.gbif.pipelines.io.avro.ALATaxonRecord.Builder();
  }

  /**
   * Creates a new ALATaxonRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ALATaxonRecord RecordBuilder
   */
  public static org.gbif.pipelines.io.avro.ALATaxonRecord.Builder newBuilder(org.gbif.pipelines.io.avro.ALATaxonRecord.Builder other) {
    return new org.gbif.pipelines.io.avro.ALATaxonRecord.Builder(other);
  }

  /**
   * Creates a new ALATaxonRecord RecordBuilder by copying an existing ALATaxonRecord instance.
   * @param other The existing instance to copy.
   * @return A new ALATaxonRecord RecordBuilder
   */
  public static org.gbif.pipelines.io.avro.ALATaxonRecord.Builder newBuilder(org.gbif.pipelines.io.avro.ALATaxonRecord other) {
    return new org.gbif.pipelines.io.avro.ALATaxonRecord.Builder(other);
  }

  /**
   * RecordBuilder for ALATaxonRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ALATaxonRecord>
    implements org.apache.avro.data.RecordBuilder<ALATaxonRecord> {

    private java.lang.String id;
    private java.lang.String scientificName;
    private java.lang.String scientificNameAuthorship;
    private java.lang.String taxonConceptID;
    private java.lang.String rank;
    private java.lang.Integer rankID;
    private java.lang.Integer lft;
    private java.lang.Integer rgt;
    private java.lang.String matchType;
    private java.lang.String kingdom;
    private java.lang.String kingdomID;
    private java.lang.String phylum;
    private java.lang.String phylumID;
    private java.lang.String classs;
    private java.lang.String classID;
    private java.lang.String order;
    private java.lang.String orderID;
    private java.lang.String family;
    private java.lang.String familyID;
    private java.lang.String genus;
    private java.lang.String genusID;
    private java.lang.String species;
    private java.lang.String speciesID;
    private java.lang.String vernacularName;
    private java.util.List<java.lang.String> speciesGroup;
    private java.util.List<java.lang.String> speciesSubgroup;
    private org.gbif.pipelines.io.avro.Diagnostic diagnostics;
    private org.gbif.pipelines.io.avro.Diagnostic.Builder diagnosticsBuilder;
    private org.gbif.pipelines.io.avro.IssueRecord issues;
    private org.gbif.pipelines.io.avro.IssueRecord.Builder issuesBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.gbif.pipelines.io.avro.ALATaxonRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.scientificName)) {
        this.scientificName = data().deepCopy(fields()[1].schema(), other.scientificName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.scientificNameAuthorship)) {
        this.scientificNameAuthorship = data().deepCopy(fields()[2].schema(), other.scientificNameAuthorship);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.taxonConceptID)) {
        this.taxonConceptID = data().deepCopy(fields()[3].schema(), other.taxonConceptID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rank)) {
        this.rank = data().deepCopy(fields()[4].schema(), other.rank);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.rankID)) {
        this.rankID = data().deepCopy(fields()[5].schema(), other.rankID);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lft)) {
        this.lft = data().deepCopy(fields()[6].schema(), other.lft);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.rgt)) {
        this.rgt = data().deepCopy(fields()[7].schema(), other.rgt);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.matchType)) {
        this.matchType = data().deepCopy(fields()[8].schema(), other.matchType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.kingdom)) {
        this.kingdom = data().deepCopy(fields()[9].schema(), other.kingdom);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.kingdomID)) {
        this.kingdomID = data().deepCopy(fields()[10].schema(), other.kingdomID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.phylum)) {
        this.phylum = data().deepCopy(fields()[11].schema(), other.phylum);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.phylumID)) {
        this.phylumID = data().deepCopy(fields()[12].schema(), other.phylumID);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.classs)) {
        this.classs = data().deepCopy(fields()[13].schema(), other.classs);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.classID)) {
        this.classID = data().deepCopy(fields()[14].schema(), other.classID);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.order)) {
        this.order = data().deepCopy(fields()[15].schema(), other.order);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.orderID)) {
        this.orderID = data().deepCopy(fields()[16].schema(), other.orderID);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.family)) {
        this.family = data().deepCopy(fields()[17].schema(), other.family);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.familyID)) {
        this.familyID = data().deepCopy(fields()[18].schema(), other.familyID);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.genus)) {
        this.genus = data().deepCopy(fields()[19].schema(), other.genus);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.genusID)) {
        this.genusID = data().deepCopy(fields()[20].schema(), other.genusID);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.species)) {
        this.species = data().deepCopy(fields()[21].schema(), other.species);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.speciesID)) {
        this.speciesID = data().deepCopy(fields()[22].schema(), other.speciesID);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.vernacularName)) {
        this.vernacularName = data().deepCopy(fields()[23].schema(), other.vernacularName);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.speciesGroup)) {
        this.speciesGroup = data().deepCopy(fields()[24].schema(), other.speciesGroup);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.speciesSubgroup)) {
        this.speciesSubgroup = data().deepCopy(fields()[25].schema(), other.speciesSubgroup);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.diagnostics)) {
        this.diagnostics = data().deepCopy(fields()[26].schema(), other.diagnostics);
        fieldSetFlags()[26] = true;
      }
      if (other.hasDiagnosticsBuilder()) {
        this.diagnosticsBuilder = org.gbif.pipelines.io.avro.Diagnostic.newBuilder(other.getDiagnosticsBuilder());
      }
      if (isValidValue(fields()[27], other.issues)) {
        this.issues = data().deepCopy(fields()[27].schema(), other.issues);
        fieldSetFlags()[27] = true;
      }
      if (other.hasIssuesBuilder()) {
        this.issuesBuilder = org.gbif.pipelines.io.avro.IssueRecord.newBuilder(other.getIssuesBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing ALATaxonRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(org.gbif.pipelines.io.avro.ALATaxonRecord other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.scientificName)) {
        this.scientificName = data().deepCopy(fields()[1].schema(), other.scientificName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.scientificNameAuthorship)) {
        this.scientificNameAuthorship = data().deepCopy(fields()[2].schema(), other.scientificNameAuthorship);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.taxonConceptID)) {
        this.taxonConceptID = data().deepCopy(fields()[3].schema(), other.taxonConceptID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.rank)) {
        this.rank = data().deepCopy(fields()[4].schema(), other.rank);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.rankID)) {
        this.rankID = data().deepCopy(fields()[5].schema(), other.rankID);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.lft)) {
        this.lft = data().deepCopy(fields()[6].schema(), other.lft);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.rgt)) {
        this.rgt = data().deepCopy(fields()[7].schema(), other.rgt);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.matchType)) {
        this.matchType = data().deepCopy(fields()[8].schema(), other.matchType);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.kingdom)) {
        this.kingdom = data().deepCopy(fields()[9].schema(), other.kingdom);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.kingdomID)) {
        this.kingdomID = data().deepCopy(fields()[10].schema(), other.kingdomID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.phylum)) {
        this.phylum = data().deepCopy(fields()[11].schema(), other.phylum);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.phylumID)) {
        this.phylumID = data().deepCopy(fields()[12].schema(), other.phylumID);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.classs)) {
        this.classs = data().deepCopy(fields()[13].schema(), other.classs);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.classID)) {
        this.classID = data().deepCopy(fields()[14].schema(), other.classID);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.order)) {
        this.order = data().deepCopy(fields()[15].schema(), other.order);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.orderID)) {
        this.orderID = data().deepCopy(fields()[16].schema(), other.orderID);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.family)) {
        this.family = data().deepCopy(fields()[17].schema(), other.family);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.familyID)) {
        this.familyID = data().deepCopy(fields()[18].schema(), other.familyID);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.genus)) {
        this.genus = data().deepCopy(fields()[19].schema(), other.genus);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.genusID)) {
        this.genusID = data().deepCopy(fields()[20].schema(), other.genusID);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.species)) {
        this.species = data().deepCopy(fields()[21].schema(), other.species);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.speciesID)) {
        this.speciesID = data().deepCopy(fields()[22].schema(), other.speciesID);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.vernacularName)) {
        this.vernacularName = data().deepCopy(fields()[23].schema(), other.vernacularName);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.speciesGroup)) {
        this.speciesGroup = data().deepCopy(fields()[24].schema(), other.speciesGroup);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.speciesSubgroup)) {
        this.speciesSubgroup = data().deepCopy(fields()[25].schema(), other.speciesSubgroup);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.diagnostics)) {
        this.diagnostics = data().deepCopy(fields()[26].schema(), other.diagnostics);
        fieldSetFlags()[26] = true;
      }
      this.diagnosticsBuilder = null;
      if (isValidValue(fields()[27], other.issues)) {
        this.issues = data().deepCopy(fields()[27].schema(), other.issues);
        fieldSetFlags()[27] = true;
      }
      this.issuesBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'scientificName' field.
      * @return The value.
      */
    public java.lang.String getScientificName() {
      return scientificName;
    }

    /**
      * Sets the value of the 'scientificName' field.
      * @param value The value of 'scientificName'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setScientificName(java.lang.String value) {
      validate(fields()[1], value);
      this.scientificName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'scientificName' field has been set.
      * @return True if the 'scientificName' field has been set, false otherwise.
      */
    public boolean hasScientificName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'scientificName' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearScientificName() {
      scientificName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'scientificNameAuthorship' field.
      * @return The value.
      */
    public java.lang.String getScientificNameAuthorship() {
      return scientificNameAuthorship;
    }

    /**
      * Sets the value of the 'scientificNameAuthorship' field.
      * @param value The value of 'scientificNameAuthorship'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setScientificNameAuthorship(java.lang.String value) {
      validate(fields()[2], value);
      this.scientificNameAuthorship = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'scientificNameAuthorship' field has been set.
      * @return True if the 'scientificNameAuthorship' field has been set, false otherwise.
      */
    public boolean hasScientificNameAuthorship() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'scientificNameAuthorship' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearScientificNameAuthorship() {
      scientificNameAuthorship = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'taxonConceptID' field.
      * @return The value.
      */
    public java.lang.String getTaxonConceptID() {
      return taxonConceptID;
    }

    /**
      * Sets the value of the 'taxonConceptID' field.
      * @param value The value of 'taxonConceptID'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setTaxonConceptID(java.lang.String value) {
      validate(fields()[3], value);
      this.taxonConceptID = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'taxonConceptID' field has been set.
      * @return True if the 'taxonConceptID' field has been set, false otherwise.
      */
    public boolean hasTaxonConceptID() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'taxonConceptID' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearTaxonConceptID() {
      taxonConceptID = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'rank' field.
      * @return The value.
      */
    public java.lang.String getRank() {
      return rank;
    }

    /**
      * Sets the value of the 'rank' field.
      * @param value The value of 'rank'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setRank(java.lang.String value) {
      validate(fields()[4], value);
      this.rank = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'rank' field has been set.
      * @return True if the 'rank' field has been set, false otherwise.
      */
    public boolean hasRank() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'rank' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearRank() {
      rank = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'rankID' field.
      * @return The value.
      */
    public java.lang.Integer getRankID() {
      return rankID;
    }

    /**
      * Sets the value of the 'rankID' field.
      * @param value The value of 'rankID'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setRankID(java.lang.Integer value) {
      validate(fields()[5], value);
      this.rankID = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'rankID' field has been set.
      * @return True if the 'rankID' field has been set, false otherwise.
      */
    public boolean hasRankID() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'rankID' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearRankID() {
      rankID = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'lft' field.
      * @return The value.
      */
    public java.lang.Integer getLft() {
      return lft;
    }

    /**
      * Sets the value of the 'lft' field.
      * @param value The value of 'lft'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setLft(java.lang.Integer value) {
      validate(fields()[6], value);
      this.lft = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'lft' field has been set.
      * @return True if the 'lft' field has been set, false otherwise.
      */
    public boolean hasLft() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'lft' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearLft() {
      lft = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'rgt' field.
      * @return The value.
      */
    public java.lang.Integer getRgt() {
      return rgt;
    }

    /**
      * Sets the value of the 'rgt' field.
      * @param value The value of 'rgt'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setRgt(java.lang.Integer value) {
      validate(fields()[7], value);
      this.rgt = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'rgt' field has been set.
      * @return True if the 'rgt' field has been set, false otherwise.
      */
    public boolean hasRgt() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'rgt' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearRgt() {
      rgt = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'matchType' field.
      * @return The value.
      */
    public java.lang.String getMatchType() {
      return matchType;
    }

    /**
      * Sets the value of the 'matchType' field.
      * @param value The value of 'matchType'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setMatchType(java.lang.String value) {
      validate(fields()[8], value);
      this.matchType = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'matchType' field has been set.
      * @return True if the 'matchType' field has been set, false otherwise.
      */
    public boolean hasMatchType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'matchType' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearMatchType() {
      matchType = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'kingdom' field.
      * @return The value.
      */
    public java.lang.String getKingdom() {
      return kingdom;
    }

    /**
      * Sets the value of the 'kingdom' field.
      * @param value The value of 'kingdom'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setKingdom(java.lang.String value) {
      validate(fields()[9], value);
      this.kingdom = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'kingdom' field has been set.
      * @return True if the 'kingdom' field has been set, false otherwise.
      */
    public boolean hasKingdom() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'kingdom' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearKingdom() {
      kingdom = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'kingdomID' field.
      * @return The value.
      */
    public java.lang.String getKingdomID() {
      return kingdomID;
    }

    /**
      * Sets the value of the 'kingdomID' field.
      * @param value The value of 'kingdomID'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setKingdomID(java.lang.String value) {
      validate(fields()[10], value);
      this.kingdomID = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'kingdomID' field has been set.
      * @return True if the 'kingdomID' field has been set, false otherwise.
      */
    public boolean hasKingdomID() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'kingdomID' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearKingdomID() {
      kingdomID = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'phylum' field.
      * @return The value.
      */
    public java.lang.String getPhylum() {
      return phylum;
    }

    /**
      * Sets the value of the 'phylum' field.
      * @param value The value of 'phylum'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setPhylum(java.lang.String value) {
      validate(fields()[11], value);
      this.phylum = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'phylum' field has been set.
      * @return True if the 'phylum' field has been set, false otherwise.
      */
    public boolean hasPhylum() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'phylum' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearPhylum() {
      phylum = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'phylumID' field.
      * @return The value.
      */
    public java.lang.String getPhylumID() {
      return phylumID;
    }

    /**
      * Sets the value of the 'phylumID' field.
      * @param value The value of 'phylumID'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setPhylumID(java.lang.String value) {
      validate(fields()[12], value);
      this.phylumID = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'phylumID' field has been set.
      * @return True if the 'phylumID' field has been set, false otherwise.
      */
    public boolean hasPhylumID() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'phylumID' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearPhylumID() {
      phylumID = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'classs' field.
      * @return The value.
      */
    public java.lang.String getClasss() {
      return classs;
    }

    /**
      * Sets the value of the 'classs' field.
      * @param value The value of 'classs'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setClasss(java.lang.String value) {
      validate(fields()[13], value);
      this.classs = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'classs' field has been set.
      * @return True if the 'classs' field has been set, false otherwise.
      */
    public boolean hasClasss() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'classs' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearClasss() {
      classs = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'classID' field.
      * @return The value.
      */
    public java.lang.String getClassID() {
      return classID;
    }

    /**
      * Sets the value of the 'classID' field.
      * @param value The value of 'classID'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setClassID(java.lang.String value) {
      validate(fields()[14], value);
      this.classID = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'classID' field has been set.
      * @return True if the 'classID' field has been set, false otherwise.
      */
    public boolean hasClassID() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'classID' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearClassID() {
      classID = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'order' field.
      * @return The value.
      */
    public java.lang.String getOrder() {
      return order;
    }

    /**
      * Sets the value of the 'order' field.
      * @param value The value of 'order'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setOrder(java.lang.String value) {
      validate(fields()[15], value);
      this.order = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'order' field has been set.
      * @return True if the 'order' field has been set, false otherwise.
      */
    public boolean hasOrder() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'order' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearOrder() {
      order = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderID' field.
      * @return The value.
      */
    public java.lang.String getOrderID() {
      return orderID;
    }

    /**
      * Sets the value of the 'orderID' field.
      * @param value The value of 'orderID'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setOrderID(java.lang.String value) {
      validate(fields()[16], value);
      this.orderID = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'orderID' field has been set.
      * @return True if the 'orderID' field has been set, false otherwise.
      */
    public boolean hasOrderID() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'orderID' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearOrderID() {
      orderID = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'family' field.
      * @return The value.
      */
    public java.lang.String getFamily() {
      return family;
    }

    /**
      * Sets the value of the 'family' field.
      * @param value The value of 'family'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setFamily(java.lang.String value) {
      validate(fields()[17], value);
      this.family = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'family' field has been set.
      * @return True if the 'family' field has been set, false otherwise.
      */
    public boolean hasFamily() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'family' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearFamily() {
      family = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'familyID' field.
      * @return The value.
      */
    public java.lang.String getFamilyID() {
      return familyID;
    }

    /**
      * Sets the value of the 'familyID' field.
      * @param value The value of 'familyID'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setFamilyID(java.lang.String value) {
      validate(fields()[18], value);
      this.familyID = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'familyID' field has been set.
      * @return True if the 'familyID' field has been set, false otherwise.
      */
    public boolean hasFamilyID() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'familyID' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearFamilyID() {
      familyID = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'genus' field.
      * @return The value.
      */
    public java.lang.String getGenus() {
      return genus;
    }

    /**
      * Sets the value of the 'genus' field.
      * @param value The value of 'genus'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setGenus(java.lang.String value) {
      validate(fields()[19], value);
      this.genus = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'genus' field has been set.
      * @return True if the 'genus' field has been set, false otherwise.
      */
    public boolean hasGenus() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'genus' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearGenus() {
      genus = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'genusID' field.
      * @return The value.
      */
    public java.lang.String getGenusID() {
      return genusID;
    }

    /**
      * Sets the value of the 'genusID' field.
      * @param value The value of 'genusID'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setGenusID(java.lang.String value) {
      validate(fields()[20], value);
      this.genusID = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'genusID' field has been set.
      * @return True if the 'genusID' field has been set, false otherwise.
      */
    public boolean hasGenusID() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'genusID' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearGenusID() {
      genusID = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'species' field.
      * @return The value.
      */
    public java.lang.String getSpecies() {
      return species;
    }

    /**
      * Sets the value of the 'species' field.
      * @param value The value of 'species'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setSpecies(java.lang.String value) {
      validate(fields()[21], value);
      this.species = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'species' field has been set.
      * @return True if the 'species' field has been set, false otherwise.
      */
    public boolean hasSpecies() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'species' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearSpecies() {
      species = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'speciesID' field.
      * @return The value.
      */
    public java.lang.String getSpeciesID() {
      return speciesID;
    }

    /**
      * Sets the value of the 'speciesID' field.
      * @param value The value of 'speciesID'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setSpeciesID(java.lang.String value) {
      validate(fields()[22], value);
      this.speciesID = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'speciesID' field has been set.
      * @return True if the 'speciesID' field has been set, false otherwise.
      */
    public boolean hasSpeciesID() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'speciesID' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearSpeciesID() {
      speciesID = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'vernacularName' field.
      * @return The value.
      */
    public java.lang.String getVernacularName() {
      return vernacularName;
    }

    /**
      * Sets the value of the 'vernacularName' field.
      * @param value The value of 'vernacularName'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setVernacularName(java.lang.String value) {
      validate(fields()[23], value);
      this.vernacularName = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'vernacularName' field has been set.
      * @return True if the 'vernacularName' field has been set, false otherwise.
      */
    public boolean hasVernacularName() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'vernacularName' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearVernacularName() {
      vernacularName = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'speciesGroup' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getSpeciesGroup() {
      return speciesGroup;
    }

    /**
      * Sets the value of the 'speciesGroup' field.
      * @param value The value of 'speciesGroup'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setSpeciesGroup(java.util.List<java.lang.String> value) {
      validate(fields()[24], value);
      this.speciesGroup = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'speciesGroup' field has been set.
      * @return True if the 'speciesGroup' field has been set, false otherwise.
      */
    public boolean hasSpeciesGroup() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'speciesGroup' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearSpeciesGroup() {
      speciesGroup = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'speciesSubgroup' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getSpeciesSubgroup() {
      return speciesSubgroup;
    }

    /**
      * Sets the value of the 'speciesSubgroup' field.
      * @param value The value of 'speciesSubgroup'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setSpeciesSubgroup(java.util.List<java.lang.String> value) {
      validate(fields()[25], value);
      this.speciesSubgroup = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'speciesSubgroup' field has been set.
      * @return True if the 'speciesSubgroup' field has been set, false otherwise.
      */
    public boolean hasSpeciesSubgroup() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'speciesSubgroup' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearSpeciesSubgroup() {
      speciesSubgroup = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'diagnostics' field.
      * @return The value.
      */
    public org.gbif.pipelines.io.avro.Diagnostic getDiagnostics() {
      return diagnostics;
    }

    /**
      * Sets the value of the 'diagnostics' field.
      * @param value The value of 'diagnostics'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setDiagnostics(org.gbif.pipelines.io.avro.Diagnostic value) {
      validate(fields()[26], value);
      this.diagnosticsBuilder = null;
      this.diagnostics = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'diagnostics' field has been set.
      * @return True if the 'diagnostics' field has been set, false otherwise.
      */
    public boolean hasDiagnostics() {
      return fieldSetFlags()[26];
    }

    /**
     * Gets the Builder instance for the 'diagnostics' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.gbif.pipelines.io.avro.Diagnostic.Builder getDiagnosticsBuilder() {
      if (diagnosticsBuilder == null) {
        if (hasDiagnostics()) {
          setDiagnosticsBuilder(org.gbif.pipelines.io.avro.Diagnostic.newBuilder(diagnostics));
        } else {
          setDiagnosticsBuilder(org.gbif.pipelines.io.avro.Diagnostic.newBuilder());
        }
      }
      return diagnosticsBuilder;
    }

    /**
     * Sets the Builder instance for the 'diagnostics' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setDiagnosticsBuilder(org.gbif.pipelines.io.avro.Diagnostic.Builder value) {
      clearDiagnostics();
      diagnosticsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'diagnostics' field has an active Builder instance
     * @return True if the 'diagnostics' field has an active Builder instance
     */
    public boolean hasDiagnosticsBuilder() {
      return diagnosticsBuilder != null;
    }

    /**
      * Clears the value of the 'diagnostics' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearDiagnostics() {
      diagnostics = null;
      diagnosticsBuilder = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'issues' field.
      * @return The value.
      */
    public org.gbif.pipelines.io.avro.IssueRecord getIssues() {
      return issues;
    }

    /**
      * Sets the value of the 'issues' field.
      * @param value The value of 'issues'.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setIssues(org.gbif.pipelines.io.avro.IssueRecord value) {
      validate(fields()[27], value);
      this.issuesBuilder = null;
      this.issues = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'issues' field has been set.
      * @return True if the 'issues' field has been set, false otherwise.
      */
    public boolean hasIssues() {
      return fieldSetFlags()[27];
    }

    /**
     * Gets the Builder instance for the 'issues' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.gbif.pipelines.io.avro.IssueRecord.Builder getIssuesBuilder() {
      if (issuesBuilder == null) {
        if (hasIssues()) {
          setIssuesBuilder(org.gbif.pipelines.io.avro.IssueRecord.newBuilder(issues));
        } else {
          setIssuesBuilder(org.gbif.pipelines.io.avro.IssueRecord.newBuilder());
        }
      }
      return issuesBuilder;
    }

    /**
     * Sets the Builder instance for the 'issues' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder setIssuesBuilder(org.gbif.pipelines.io.avro.IssueRecord.Builder value) {
      clearIssues();
      issuesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'issues' field has an active Builder instance
     * @return True if the 'issues' field has an active Builder instance
     */
    public boolean hasIssuesBuilder() {
      return issuesBuilder != null;
    }

    /**
      * Clears the value of the 'issues' field.
      * @return This builder.
      */
    public org.gbif.pipelines.io.avro.ALATaxonRecord.Builder clearIssues() {
      issues = null;
      issuesBuilder = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ALATaxonRecord build() {
      try {
        ALATaxonRecord record = new ALATaxonRecord();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.scientificName = fieldSetFlags()[1] ? this.scientificName : (java.lang.String) defaultValue(fields()[1]);
        record.scientificNameAuthorship = fieldSetFlags()[2] ? this.scientificNameAuthorship : (java.lang.String) defaultValue(fields()[2]);
        record.taxonConceptID = fieldSetFlags()[3] ? this.taxonConceptID : (java.lang.String) defaultValue(fields()[3]);
        record.rank = fieldSetFlags()[4] ? this.rank : (java.lang.String) defaultValue(fields()[4]);
        record.rankID = fieldSetFlags()[5] ? this.rankID : (java.lang.Integer) defaultValue(fields()[5]);
        record.lft = fieldSetFlags()[6] ? this.lft : (java.lang.Integer) defaultValue(fields()[6]);
        record.rgt = fieldSetFlags()[7] ? this.rgt : (java.lang.Integer) defaultValue(fields()[7]);
        record.matchType = fieldSetFlags()[8] ? this.matchType : (java.lang.String) defaultValue(fields()[8]);
        record.kingdom = fieldSetFlags()[9] ? this.kingdom : (java.lang.String) defaultValue(fields()[9]);
        record.kingdomID = fieldSetFlags()[10] ? this.kingdomID : (java.lang.String) defaultValue(fields()[10]);
        record.phylum = fieldSetFlags()[11] ? this.phylum : (java.lang.String) defaultValue(fields()[11]);
        record.phylumID = fieldSetFlags()[12] ? this.phylumID : (java.lang.String) defaultValue(fields()[12]);
        record.classs = fieldSetFlags()[13] ? this.classs : (java.lang.String) defaultValue(fields()[13]);
        record.classID = fieldSetFlags()[14] ? this.classID : (java.lang.String) defaultValue(fields()[14]);
        record.order = fieldSetFlags()[15] ? this.order : (java.lang.String) defaultValue(fields()[15]);
        record.orderID = fieldSetFlags()[16] ? this.orderID : (java.lang.String) defaultValue(fields()[16]);
        record.family = fieldSetFlags()[17] ? this.family : (java.lang.String) defaultValue(fields()[17]);
        record.familyID = fieldSetFlags()[18] ? this.familyID : (java.lang.String) defaultValue(fields()[18]);
        record.genus = fieldSetFlags()[19] ? this.genus : (java.lang.String) defaultValue(fields()[19]);
        record.genusID = fieldSetFlags()[20] ? this.genusID : (java.lang.String) defaultValue(fields()[20]);
        record.species = fieldSetFlags()[21] ? this.species : (java.lang.String) defaultValue(fields()[21]);
        record.speciesID = fieldSetFlags()[22] ? this.speciesID : (java.lang.String) defaultValue(fields()[22]);
        record.vernacularName = fieldSetFlags()[23] ? this.vernacularName : (java.lang.String) defaultValue(fields()[23]);
        record.speciesGroup = fieldSetFlags()[24] ? this.speciesGroup : (java.util.List<java.lang.String>) defaultValue(fields()[24]);
        record.speciesSubgroup = fieldSetFlags()[25] ? this.speciesSubgroup : (java.util.List<java.lang.String>) defaultValue(fields()[25]);
        if (diagnosticsBuilder != null) {
          record.diagnostics = this.diagnosticsBuilder.build();
        } else {
          record.diagnostics = fieldSetFlags()[26] ? this.diagnostics : (org.gbif.pipelines.io.avro.Diagnostic) defaultValue(fields()[26]);
        }
        if (issuesBuilder != null) {
          record.issues = this.issuesBuilder.build();
        } else {
          record.issues = fieldSetFlags()[27] ? this.issues : (org.gbif.pipelines.io.avro.IssueRecord) defaultValue(fields()[27]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ALATaxonRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<ALATaxonRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ALATaxonRecord>
    READER$ = (org.apache.avro.io.DatumReader<ALATaxonRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
